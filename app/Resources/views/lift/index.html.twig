{% extends 'base.html.twig' %}

{% block body %}
    <div class="row">
        <div class="col-md-7">
            <h2>
                Lift History
                <a href="#list-stuff-form" class="btn btn-md btn-success pull-right">
                    <span class="fa fa-plus"></span> Add
                </a>
            </h2>

            <table class="table table-striped js-rep-log-table">
                <thead>
                <tr>
                    <th>What</th>
                    <th>How many times?</th>
                    <th>Weight</th>
                    <th>&nbsp;</th>
                </tr>
                </thead>
                <tbody>
                {% for repLog in repLogs %}
                    <tr data-weight="{{ repLog.totalWeightLifted }}"> {# je crée un nouvele attribut data-weight qui corresponde à la valeur "repLog.totalWeightLifted" #}
                        <td>{{ repLog.itemLabel|trans }}</td>
                        <td>{{ repLog.reps }}</td>
                        <td>{{ repLog.totalWeightLifted }}</td>
                        <td>
                            <a 
                                href="#" 
                                class="js-delete-rep-log"
                                data-url="{{ path('rep_log_delete', {id: repLog.id}) }}"
                            >
                                <span class="fa fa-trash"></span>
                            </a>
                        </td>
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="4">Get liftin'!</td>
                    </tr>
                {% endfor %}
                </tbody>
                <tfoot>
                    <tr>
                        <td>&nbsp;</td>
                        <th>Total</th>
                        <th class="js-total-weight">{{ totalWeight }}</th>
                        <td>&nbsp;</td>
                    </tr>
                </tfoot>
            </table>

            {{ include('lift/_form.html.twig') }}

        </div>
        <div class="col-md-5">
            <div class="leaderboard">
                <h2 class="text-center">
                    <img class="dumbbell" src="{{ asset('assets/images/dumbbell.png') }}" />
                    Leaderboard
                </h2>

                {{ include('lift/_leaderboard.html.twig') }}
            </div>
        </div>
    </div>
    
{% endblock %}
{% block javascripts %} 
    {{ parent() }}
    <script>
        var RepLogApp = {
            // 1° clé d'initialisation définie sur une fonction (). 
            // Nous l'appellerons quand la page se chargera. 
            // et son travail consistera à attacher tous les gestionnaires d'événements pour tous les événements dont nous avons besoin sur notre tableau.
            // l'argument $warper "correspond" à $table 
                initalize: function($wrapper){
                    this.$wrapper = $wrapper;
                    this.$wrapper.find('.js-delete-rep-log').on( 'click', this.handleRepLogDelete ); // la fonction est passée à l'action on ('click');
                    this.$wrapper.find('tbody tr').on('click', this.handleRowClick);
                },
            // 2° clé 
                handleRepLogDelete: function(e) {
                    e.preventDefault();
                    $(this).addClass('text-danger');
                    $(this).find('.fa')
                            .removeClass('fa-trash') 
                            .addClass('fa-spinner') 
                            .addClass('fa-spin');

                    var deleteUrl = $(this).data('url'); 
                    var $row = $(this).closest('tr');
                    var $totalWeightContainer = RepLogApp.$wrapper.find('.js-total-weight'); // je fait référence à la propriété statique $wrapper de l'objet repLogApp
                    var newWeight = $totalWeightContainer.html() - $row.data('weight');

                    $.ajax({
                        url: deleteUrl, 
                        method: 'DELETE', 
                        success: function() {
                            $row.fadeOut('normal', function(){
                                $row.remove();
                            });
                            $totalWeightContainer.html(newWeight);
                            RepLogApp.updateTotalWeightLifted();
                        }
                    });
                },
            // 3° clé
                handleRowClick: function() {
                    console.log('tbody tr on click ok!');
                },
            // 4° clé
                updateTotalWeightLifted: function() {
                    var totalWeight = 0;
                    this.$wrapper.find('tbody tr').each(function() { // each(function (){}) : ittération (jquery) 
                        totalWeight += $(this).data('weight'); // this "correspond" à tr
                    });
                    this.$wrapper.find('.js-total-weight').html(totalWeight);
                }
        };

        $(document).ready(function() {
            console.log("ok");
            var $table = $('.js-rep-log-table');
            RepLogApp.initalize($table);
        });

    </script>
{% endblock %}

